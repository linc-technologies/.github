name: Reusable workflow example

on:
  workflow_call:

#    inputs:
#      username:
#        required: true
#        type: string
    secrets:
      BITBUCKET_SSH_KEY:
        required: true


# GoLang steps:
#        cachePrime,
#        cacheRestore,
#        ciDep,
#        ciTest,
#        slackUnitTests,
#        compile,
#        cacheRebuild,
#        dockerBuild,
#        slackBuild,
#        deployKubernetes,
#        deployHelm,
#        slackDeploy,



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Setup Go
    # TODO: Ensure that this caches the .gomod and .gocache folders
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17.2' # The Go version to download (if necessary) and use.

#    - name: Bitbucket Auth
#      env:
#        GIT_DEPLOYMENT_KEY: ${{secrets.BITBUCKET_SSH_KEY}}
#      run: |
#        mkdir -p /root/.ssh
#        echo "$GIT_DEPLOYMENT_KEY" > /root/.ssh/id_rsa
#        chmod 0600 /root/.ssh/id_rsa
#        ssh-keyscan -t rsa bitbucket.org >> /root/.ssh/known_hosts
#        git config --global url."git@bitbucket.org:".insteadOf "https://bitbucket.org"

    - name: Bitbucket SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.BITBUCKET_SSH_KEY }}

    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint

    # Run build of the application
    - name: Run build
      env:
        GOPRIVATE: bitbucket.org
      run: go build -tags development -ldflags="-s -w" -v


    # Run vet & lint on the code
    - name: Run vet & lint
      run: |
        go vet .
        golint .

    # Start a Mongo DB server for testing
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.7.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    # Run testing on the code
    - name: Run testing
      run: cd test && go test -v

#    # Send slack notification
#    - name: Send slack notification
#      uses: 8398a7/action-slack@v3
#      with:
#        status: ${{ job.status }}
#        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
#      env:
#        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
#      if: always() # Pick up events even if the job fails or is canceled.
#
#  # The "deploy" workflow
#  deploy:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#    needs: [build] # Only run this workflow when "build" workflow succeeds
#    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }} # Only run this workflow if it is master branch on push event
#    steps:
#    - uses: actions/checkout@v2
#
#    # Deploy to Docker registry
#    - name: Deploy to Docker registry
#      uses: docker/build-push-action@v1
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#        repository: wilsontanwm/gosimple
#        tag_with_ref: true