name: "PHP"

on:
  workflow_call:

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.export_build_tag.outputs.build_number }}
    strategy:
      fail-fast: false
      matrix:
        container: ["php", "nginx"]
    steps:

      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v4

      - name: "Login to ACR"
        id: login_to_acr
        uses: docker/login-action@v3
        with:
          registry: linced.azurecr.io
          username: ${{ secrets.AZURE_ACR_LINCED_USERNAME }}
          password: ${{ secrets.AZURE_ACR_LINCED_PASSWORD }}

      - name: "Set up Docker Buildx"
        id: set_up_docker_buildx
        uses: docker/setup-buildx-action@v3

      - name: "Export Build Tag"
        id: export_build_tag
        uses: linc-technologies/.github/.github/actions/build_label@master
        with:
          matrix: ${{ matrix.container }}

      - name: "Build and export to Docker (Environment Based)"
        id: build_and_export_to_docker_environment_based
        uses: docker/build-push-action@v5
        if: contains(fromJson('["development", "staging", "production"]'), github.ref_name)
        with:
          context: .
          push: true
          tags: |
            ${{ steps.export_build_tag.outputs.docker_build_number }}
            ${{ steps.export_build_tag.outputs.docker_build_branch }}
          file: ${{ matrix.container == 'php' && 'Dockerfile' || 'Dockerfile.nginx' }}

      - name: "Slack Notify"
        if: success() || failure()
        uses: linc-technologies/.github/.github/actions/slack_notify@master
        continue-on-error: true
        with:
          event: build
          success: ${{ !contains(steps.*.conclusion, 'failure') }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    name: "Deploy"
    if: contains(fromJson('["testing", "development", "staging", "production"]'), github.ref_name)
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    needs: [build]
    steps:

      - name: "Checkout"
        id: checkout
        uses: actions/checkout@v4
        with:
          repository: linc-technologies/helm
          token: ${{ secrets.CICD_TOKEN }}

      - name: "Install Kubectl"
        id: install_kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.3'

      # If we're deploying from a non-production branch, configure Kubectl with Dev cluster secrets
      - name: "Configure Kubectl (development-au-east)"
        id: configure_kubectl_development_au_east
        if: ${{ github.ref != 'refs/heads/production' }}
        uses: linc-technologies/.github/.github/actions/k8s_auth@master
        with:
          server: ${{ secrets.DEVELOPMENT_AU_EAST_AKS_SERVER }}
          token: ${{ secrets.DEVELOPMENT_AU_EAST_AKS_TOKEN }}
          cert: ${{ secrets.DEVELOPMENT_AU_EAST_AKS_CERT }}

      # If we're deploying from a production branch, configure Kubectl with Prod cluster secrets
      - name: "Configure Kubectl (production-au-east)"
        id: configure_kubectl_production_au_east
        if: ${{ github.ref == 'refs/heads/production' }}
        uses: linc-technologies/.github/.github/actions/k8s_auth@master
        with:
          server: ${{ secrets.PRODUCTION_AU_EAST_AKS_SERVER }}
          token: ${{ secrets.PRODUCTION_AU_EAST_AKS_TOKEN }}
          cert: ${{ secrets.PRODUCTION_AU_EAST_AKS_CERT }}

      - name: "Kubectl Version"
        id: kubectl_version
        run: kubectl version

      - name: "Helm Deploy"
        id: helm_deploy
        uses: linc-technologies/.github/.github/actions/deploy_helm@master
        with:
          chart: "php"
          release: ${{ github.event.repository.name }}
          namespace: ${{ github.ref_name }}
          values: ${{ github.ref_name }}
          tag: ${{ needs.build.outputs.build_number }}
          oci_user: ${{ secrets.AZURE_ACR_LINCED_USERNAME }}
          oci_pass: ${{ secrets.AZURE_ACR_LINCED_PASSWORD }}

      - name: "Slack Notify"
        if: success() || failure()
        uses: linc-technologies/.github/.github/actions/slack_notify@master
        continue-on-error: true
        with:
          event: deploy
          success: ${{ !contains(steps.*.conclusion, 'failure') }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
