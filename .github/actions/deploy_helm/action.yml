name: "Helm Deploy"
description: "Install or Upgrade a Helm release in Kubernetes."
inputs:
  chart:
    description: "The name of the chart to use: ['app', 'service', 'php']"
    required: true
  release:
    description: "The name of the Helm release to install, ie, `people`."
    required: true
  namespace:
    description: "The Kubernetes namespace to install the release into."
    required: true
  values:
    description: "The name of the values file to use. This value will be interpolated into 'values.%s.yaml', and is typically the namespace name."
    required: true
  tag:
    description: "The image build tag (everything after the repository name and ':') to update the deployment with. Ie, `development` or `10042`."
    required: true
  oci_user:
    description: "The username to authenticate with ACR with to retrieve OCI Helm charts."
    required: true
  oci_pass:
    description: "The password to authenticate with ACR with to retrieve OCI Helm charts."
    required: true
runs:
  using: "composite"
  steps:

    - name: "Setup Helm"
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: "Login to ACR"
      run: |
        helm registry login linced.azurecr.io --username ${{ inputs.oci_user }} --password ${{ inputs.oci_pass }}
      shell: bash

    # If the namespace is development, use the latest version, including pre-releases
    # --devel: use development versions, too. Equivalent to version '>0.0.0-0'. If --version is set, this is ignored
    - name: "Helm Deploy"
      id: devel
      if: ${{ inputs.namespace == 'development' }}
      run: |
        helm upgrade -i ${{ inputs.release }} oci://linced.azurecr.io/helm/${{ inputs.chart }}-chart \
          --namespace ${{ inputs.namespace }} \
          -f values/${{ inputs.chart }}-chart/${{ inputs.release }}/values.${{ inputs.values }}.yaml \
          --set image.tag=${{ inputs.tag }} \
          --wait --timeout 2m --devel
      shell: bash

    # Otherwise use the latest full version
    - name: "Helm Deploy"
      if: ${{ steps.devel.conclusion == 'skipped' }}
      run: |
        helm upgrade -i ${{ inputs.release }} oci://linced.azurecr.io/helm/${{ inputs.chart }}-chart \
          --namespace ${{ inputs.namespace }} \
          -f values/${{ inputs.chart }}-chart/${{ inputs.release }}/values.${{ inputs.values }}.yaml \
          --set image.tag=${{ inputs.tag }} \
          --wait --timeout 2m
      shell: bash